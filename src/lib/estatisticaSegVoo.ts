type RegistroMensal = {
  atual: number | null;
  anterior: number | null;
};

/**
 * Calcula a mÃ©dia mensal de registros para os perÃ­odos atual e anterior.
 * Assume que o array contÃ©m 12 meses para cada perÃ­odo.
 */
export function calcularMediaMensal(dados: RegistroMensal[]) {
  const mediaAtual = Math.round(
    dados.reduce((acc, d) => acc + (d.atual || 0), 0) / 12
  );

  const mediaAnterior = Math.round(
    dados.reduce((acc, d) => acc + (d.anterior || 0), 0) / 12
  );

  return { mediaAtual, mediaAnterior };
}

/**
 * Calcula a variaÃ§Ã£o percentual entre duas mÃ©dias.
 * Retorna null se a mÃ©dia anterior for zero (evita divisÃ£o por zero).
 */
export function calcularVariacaoPercentual(mediaAtual: number, mediaAnterior: number): number | null {
  if (mediaAnterior === 0) return null;

  const variacao = ((mediaAtual - mediaAnterior) / mediaAnterior) * 100;
  return Math.round(variacao);
}

/* Gera uma legenda com seta e porcentagem de variaÃ§Ã£o (retorna string para evitar JSX em .ts). */
export function gerarLegendaComVariaÃ§Ã£o(ano: string, variacao: number | null): string {
  if (variacao === null) return ano;

  const positivo = variacao > 0;
  const emoji = positivo ? "ğŸŸ¢â–²" : "ğŸ”»â–¼";

  return `${ano} ${emoji}${Math.abs(variacao)}% em relaÃ§Ã£o ao ano anterior`;
}